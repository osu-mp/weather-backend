swagger: "2.0"
info:
  description: "CS 561 Assignment 4"
  version: "1.0.0"
  title: "Assignment 4"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "paceym@oregonstate.edu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3002"
basePath: "/"
#tags:
#- name: "pet"
#  description: "Everything about your Pets"
#  externalDocs:
#    description: "Find out more"
#    url: "http://swagger.io"
#- name: "store"
#  description: "Access to Petstore orders"
#- name: "user"
#  description: "Operations about user"
#  externalDocs:
#    description: "Find out more about our store"
#    url: "http://swagger.io"
schemes:
#- "https"
- "http"
paths:
  /v1/weather:
    get:
      tags:
      - "weather"
      summary: "Mock OpenWeather's GET endpoint"
      description: "Return mocked data from OpenWeather"
      operationId: "queryWeather"
      produces:
      - "application/json"
      #parameters: # no parameters
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
            example: "matt was here"
        "400":
          description: "Invalid status value"
      
  /v1/hello:
    get:
      tags:
      - "hello"
      summary: "Return a greeting"
      description: "Query for a greeting"
      operationId: "sayHello"
      produces:
   #   - "application/xml"
      - "application/json"
      # parameters: # no parameters
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
            example: "Hello world"
        "400":
          description: "Invalid status value"
          
  /v1/auth:
    get:
      tags:
      - "auth"
      summary: "Accept username and password, return mock token"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"